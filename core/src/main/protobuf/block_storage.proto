package com.twitter.data.proto;

message SerializedBlock {
  // The version of the block format we are writing. Always set to 1.
  optional int32 version              = 1;
  // The class_name of the message, e.g. "com.twitter.data.proto.Tables.Status"
  optional string proto_class_name    = 2;
  // A list of serialized byte blobs of the contained protocol buffers.
  // Generally there should be no more than 1000 or so blobs per block,
  // because all of them get parsed into memory at once during analysis.
  // The number of blobs per block can vary arbitrarily, and can even be
  // just 1 if necessary (somewhat space-inefficient).
  repeated bytes proto_blobs          = 3;
};

// The serialization format for all protobuf data consists of repeated sequences that look like

// 16-byte GUID | 4-byte size, little-endian | that many bytes of a serialized SerializedBlock data structure
// 16-byte GUID | 4-byte size, little-endian | that many bytes of a serialized SerializedBlock data structure
// ...
// 16-byte GUID | 4-byte size, little-endian | that many bytes of a serialized SerializedBlock data structure

// The 16-byte GUID is ALWAYS the following:
// 0x29, 0xd8, 0xd5, 0x06, 0x58, 0xcd, 0x4c, 0x29, 0xb2, 0xbc, 0x57, 0x99, 0x21, 0x71, 0xbd, 0xff
//

// Pseudocode for serializing the block is the following (approximately in Java):
// SerializedBlock block = SerializedBlock.newBuilder().setVersion(1)
//                                                     .setProtoClassName(Status.class.getName())
//                                                     .addProtoBlobs(status1.toByteString())
//                                                     .addProtoBlobs(status2.toByteString())
//                                                     .build();
// Now write to disk, with os being an OutputStream:
// os.write(<bytes of the guid above>)
// os.write(<raw little endian of block.getSerializedSize())
// os.write(block.toByteArray());
//
// and repeat.  
// Note that the description above implies that all files start with the GUID.