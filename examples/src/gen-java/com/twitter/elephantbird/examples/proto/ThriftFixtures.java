// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: thrift_fixtures.proto

package com.twitter.elephantbird.examples.proto;

public final class ThriftFixtures {
  private ThriftFixtures() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class OneOfEach extends
      com.google.protobuf.GeneratedMessage {
    // Use OneOfEach.newBuilder() to construct.
    private OneOfEach() {
      initFields();
    }
    private OneOfEach(boolean noInit) {}
    
    private static final OneOfEach defaultInstance;
    public static OneOfEach getDefaultInstance() {
      return defaultInstance;
    }
    
    public OneOfEach getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.twitter.elephantbird.examples.proto.ThriftFixtures.internal_static_com_twitter_elephantbird_examples_proto_OneOfEach_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.twitter.elephantbird.examples.proto.ThriftFixtures.internal_static_com_twitter_elephantbird_examples_proto_OneOfEach_fieldAccessorTable;
    }
    
    // optional bool im_true = 1;
    public static final int IM_TRUE_FIELD_NUMBER = 1;
    private boolean hasImTrue;
    private boolean imTrue_ = false;
    public boolean hasImTrue() { return hasImTrue; }
    public boolean getImTrue() { return imTrue_; }
    
    // optional bool im_false = 2;
    public static final int IM_FALSE_FIELD_NUMBER = 2;
    private boolean hasImFalse;
    private boolean imFalse_ = false;
    public boolean hasImFalse() { return hasImFalse; }
    public boolean getImFalse() { return imFalse_; }
    
    // optional int32 a_bite = 3;
    public static final int A_BITE_FIELD_NUMBER = 3;
    private boolean hasABite;
    private int aBite_ = 0;
    public boolean hasABite() { return hasABite; }
    public int getABite() { return aBite_; }
    
    // optional int32 integer16 = 4;
    public static final int INTEGER16_FIELD_NUMBER = 4;
    private boolean hasInteger16;
    private int integer16_ = 0;
    public boolean hasInteger16() { return hasInteger16; }
    public int getInteger16() { return integer16_; }
    
    // optional int32 integer32 = 5;
    public static final int INTEGER32_FIELD_NUMBER = 5;
    private boolean hasInteger32;
    private int integer32_ = 0;
    public boolean hasInteger32() { return hasInteger32; }
    public int getInteger32() { return integer32_; }
    
    // optional int64 integer64 = 6;
    public static final int INTEGER64_FIELD_NUMBER = 6;
    private boolean hasInteger64;
    private long integer64_ = 0L;
    public boolean hasInteger64() { return hasInteger64; }
    public long getInteger64() { return integer64_; }
    
    // optional double double_precision = 7;
    public static final int DOUBLE_PRECISION_FIELD_NUMBER = 7;
    private boolean hasDoublePrecision;
    private double doublePrecision_ = 0D;
    public boolean hasDoublePrecision() { return hasDoublePrecision; }
    public double getDoublePrecision() { return doublePrecision_; }
    
    // optional string some_characters = 8;
    public static final int SOME_CHARACTERS_FIELD_NUMBER = 8;
    private boolean hasSomeCharacters;
    private java.lang.String someCharacters_ = "";
    public boolean hasSomeCharacters() { return hasSomeCharacters; }
    public java.lang.String getSomeCharacters() { return someCharacters_; }
    
    // optional string zomg_unicode = 9;
    public static final int ZOMG_UNICODE_FIELD_NUMBER = 9;
    private boolean hasZomgUnicode;
    private java.lang.String zomgUnicode_ = "";
    public boolean hasZomgUnicode() { return hasZomgUnicode; }
    public java.lang.String getZomgUnicode() { return zomgUnicode_; }
    
    // optional bool what_who = 10;
    public static final int WHAT_WHO_FIELD_NUMBER = 10;
    private boolean hasWhatWho;
    private boolean whatWho_ = false;
    public boolean hasWhatWho() { return hasWhatWho; }
    public boolean getWhatWho() { return whatWho_; }
    
    // optional bytes base64 = 11;
    public static final int BASE64_FIELD_NUMBER = 11;
    private boolean hasBase64;
    private com.google.protobuf.ByteString base64_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBase64() { return hasBase64; }
    public com.google.protobuf.ByteString getBase64() { return base64_; }
    
    // repeated int32 byte_list = 12;
    public static final int BYTE_LIST_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> byteList_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getByteListList() {
      return byteList_;
    }
    public int getByteListCount() { return byteList_.size(); }
    public int getByteList(int index) {
      return byteList_.get(index);
    }
    
    // repeated int32 i16_list = 13;
    public static final int I16_LIST_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> i16List_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getI16ListList() {
      return i16List_;
    }
    public int getI16ListCount() { return i16List_.size(); }
    public int getI16List(int index) {
      return i16List_.get(index);
    }
    
    // repeated int64 i64_list = 14;
    public static final int I64_LIST_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Long> i64List_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getI64ListList() {
      return i64List_;
    }
    public int getI64ListCount() { return i64List_.size(); }
    public long getI64List(int index) {
      return i64List_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasImTrue()) {
        output.writeBool(1, getImTrue());
      }
      if (hasImFalse()) {
        output.writeBool(2, getImFalse());
      }
      if (hasABite()) {
        output.writeInt32(3, getABite());
      }
      if (hasInteger16()) {
        output.writeInt32(4, getInteger16());
      }
      if (hasInteger32()) {
        output.writeInt32(5, getInteger32());
      }
      if (hasInteger64()) {
        output.writeInt64(6, getInteger64());
      }
      if (hasDoublePrecision()) {
        output.writeDouble(7, getDoublePrecision());
      }
      if (hasSomeCharacters()) {
        output.writeString(8, getSomeCharacters());
      }
      if (hasZomgUnicode()) {
        output.writeString(9, getZomgUnicode());
      }
      if (hasWhatWho()) {
        output.writeBool(10, getWhatWho());
      }
      if (hasBase64()) {
        output.writeBytes(11, getBase64());
      }
      for (int element : getByteListList()) {
        output.writeInt32(12, element);
      }
      for (int element : getI16ListList()) {
        output.writeInt32(13, element);
      }
      for (long element : getI64ListList()) {
        output.writeInt64(14, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasImTrue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, getImTrue());
      }
      if (hasImFalse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getImFalse());
      }
      if (hasABite()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getABite());
      }
      if (hasInteger16()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getInteger16());
      }
      if (hasInteger32()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getInteger32());
      }
      if (hasInteger64()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, getInteger64());
      }
      if (hasDoublePrecision()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, getDoublePrecision());
      }
      if (hasSomeCharacters()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getSomeCharacters());
      }
      if (hasZomgUnicode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(9, getZomgUnicode());
      }
      if (hasWhatWho()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, getWhatWho());
      }
      if (hasBase64()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getBase64());
      }
      {
        int dataSize = 0;
        for (int element : getByteListList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getByteListList().size();
      }
      {
        int dataSize = 0;
        for (int element : getI16ListList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getI16ListList().size();
      }
      {
        int dataSize = 0;
        for (long element : getI64ListList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getI64ListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach result;
      
      // Construct using com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach();
        return builder;
      }
      
      protected com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach.getDescriptor();
      }
      
      public com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach getDefaultInstanceForType() {
        return com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.byteList_ != java.util.Collections.EMPTY_LIST) {
          result.byteList_ =
            java.util.Collections.unmodifiableList(result.byteList_);
        }
        if (result.i16List_ != java.util.Collections.EMPTY_LIST) {
          result.i16List_ =
            java.util.Collections.unmodifiableList(result.i16List_);
        }
        if (result.i64List_ != java.util.Collections.EMPTY_LIST) {
          result.i64List_ =
            java.util.Collections.unmodifiableList(result.i64List_);
        }
        com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach) {
          return mergeFrom((com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach other) {
        if (other == com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach.getDefaultInstance()) return this;
        if (other.hasImTrue()) {
          setImTrue(other.getImTrue());
        }
        if (other.hasImFalse()) {
          setImFalse(other.getImFalse());
        }
        if (other.hasABite()) {
          setABite(other.getABite());
        }
        if (other.hasInteger16()) {
          setInteger16(other.getInteger16());
        }
        if (other.hasInteger32()) {
          setInteger32(other.getInteger32());
        }
        if (other.hasInteger64()) {
          setInteger64(other.getInteger64());
        }
        if (other.hasDoublePrecision()) {
          setDoublePrecision(other.getDoublePrecision());
        }
        if (other.hasSomeCharacters()) {
          setSomeCharacters(other.getSomeCharacters());
        }
        if (other.hasZomgUnicode()) {
          setZomgUnicode(other.getZomgUnicode());
        }
        if (other.hasWhatWho()) {
          setWhatWho(other.getWhatWho());
        }
        if (other.hasBase64()) {
          setBase64(other.getBase64());
        }
        if (!other.byteList_.isEmpty()) {
          if (result.byteList_.isEmpty()) {
            result.byteList_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.byteList_.addAll(other.byteList_);
        }
        if (!other.i16List_.isEmpty()) {
          if (result.i16List_.isEmpty()) {
            result.i16List_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.i16List_.addAll(other.i16List_);
        }
        if (!other.i64List_.isEmpty()) {
          if (result.i64List_.isEmpty()) {
            result.i64List_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.i64List_.addAll(other.i64List_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setImTrue(input.readBool());
              break;
            }
            case 16: {
              setImFalse(input.readBool());
              break;
            }
            case 24: {
              setABite(input.readInt32());
              break;
            }
            case 32: {
              setInteger16(input.readInt32());
              break;
            }
            case 40: {
              setInteger32(input.readInt32());
              break;
            }
            case 48: {
              setInteger64(input.readInt64());
              break;
            }
            case 57: {
              setDoublePrecision(input.readDouble());
              break;
            }
            case 66: {
              setSomeCharacters(input.readString());
              break;
            }
            case 74: {
              setZomgUnicode(input.readString());
              break;
            }
            case 80: {
              setWhatWho(input.readBool());
              break;
            }
            case 90: {
              setBase64(input.readBytes());
              break;
            }
            case 96: {
              addByteList(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addByteList(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              addI16List(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addI16List(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              addI64List(input.readInt64());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addI64List(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // optional bool im_true = 1;
      public boolean hasImTrue() {
        return result.hasImTrue();
      }
      public boolean getImTrue() {
        return result.getImTrue();
      }
      public Builder setImTrue(boolean value) {
        result.hasImTrue = true;
        result.imTrue_ = value;
        return this;
      }
      public Builder clearImTrue() {
        result.hasImTrue = false;
        result.imTrue_ = false;
        return this;
      }
      
      // optional bool im_false = 2;
      public boolean hasImFalse() {
        return result.hasImFalse();
      }
      public boolean getImFalse() {
        return result.getImFalse();
      }
      public Builder setImFalse(boolean value) {
        result.hasImFalse = true;
        result.imFalse_ = value;
        return this;
      }
      public Builder clearImFalse() {
        result.hasImFalse = false;
        result.imFalse_ = false;
        return this;
      }
      
      // optional int32 a_bite = 3;
      public boolean hasABite() {
        return result.hasABite();
      }
      public int getABite() {
        return result.getABite();
      }
      public Builder setABite(int value) {
        result.hasABite = true;
        result.aBite_ = value;
        return this;
      }
      public Builder clearABite() {
        result.hasABite = false;
        result.aBite_ = 0;
        return this;
      }
      
      // optional int32 integer16 = 4;
      public boolean hasInteger16() {
        return result.hasInteger16();
      }
      public int getInteger16() {
        return result.getInteger16();
      }
      public Builder setInteger16(int value) {
        result.hasInteger16 = true;
        result.integer16_ = value;
        return this;
      }
      public Builder clearInteger16() {
        result.hasInteger16 = false;
        result.integer16_ = 0;
        return this;
      }
      
      // optional int32 integer32 = 5;
      public boolean hasInteger32() {
        return result.hasInteger32();
      }
      public int getInteger32() {
        return result.getInteger32();
      }
      public Builder setInteger32(int value) {
        result.hasInteger32 = true;
        result.integer32_ = value;
        return this;
      }
      public Builder clearInteger32() {
        result.hasInteger32 = false;
        result.integer32_ = 0;
        return this;
      }
      
      // optional int64 integer64 = 6;
      public boolean hasInteger64() {
        return result.hasInteger64();
      }
      public long getInteger64() {
        return result.getInteger64();
      }
      public Builder setInteger64(long value) {
        result.hasInteger64 = true;
        result.integer64_ = value;
        return this;
      }
      public Builder clearInteger64() {
        result.hasInteger64 = false;
        result.integer64_ = 0L;
        return this;
      }
      
      // optional double double_precision = 7;
      public boolean hasDoublePrecision() {
        return result.hasDoublePrecision();
      }
      public double getDoublePrecision() {
        return result.getDoublePrecision();
      }
      public Builder setDoublePrecision(double value) {
        result.hasDoublePrecision = true;
        result.doublePrecision_ = value;
        return this;
      }
      public Builder clearDoublePrecision() {
        result.hasDoublePrecision = false;
        result.doublePrecision_ = 0D;
        return this;
      }
      
      // optional string some_characters = 8;
      public boolean hasSomeCharacters() {
        return result.hasSomeCharacters();
      }
      public java.lang.String getSomeCharacters() {
        return result.getSomeCharacters();
      }
      public Builder setSomeCharacters(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSomeCharacters = true;
        result.someCharacters_ = value;
        return this;
      }
      public Builder clearSomeCharacters() {
        result.hasSomeCharacters = false;
        result.someCharacters_ = getDefaultInstance().getSomeCharacters();
        return this;
      }
      
      // optional string zomg_unicode = 9;
      public boolean hasZomgUnicode() {
        return result.hasZomgUnicode();
      }
      public java.lang.String getZomgUnicode() {
        return result.getZomgUnicode();
      }
      public Builder setZomgUnicode(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasZomgUnicode = true;
        result.zomgUnicode_ = value;
        return this;
      }
      public Builder clearZomgUnicode() {
        result.hasZomgUnicode = false;
        result.zomgUnicode_ = getDefaultInstance().getZomgUnicode();
        return this;
      }
      
      // optional bool what_who = 10;
      public boolean hasWhatWho() {
        return result.hasWhatWho();
      }
      public boolean getWhatWho() {
        return result.getWhatWho();
      }
      public Builder setWhatWho(boolean value) {
        result.hasWhatWho = true;
        result.whatWho_ = value;
        return this;
      }
      public Builder clearWhatWho() {
        result.hasWhatWho = false;
        result.whatWho_ = false;
        return this;
      }
      
      // optional bytes base64 = 11;
      public boolean hasBase64() {
        return result.hasBase64();
      }
      public com.google.protobuf.ByteString getBase64() {
        return result.getBase64();
      }
      public Builder setBase64(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBase64 = true;
        result.base64_ = value;
        return this;
      }
      public Builder clearBase64() {
        result.hasBase64 = false;
        result.base64_ = getDefaultInstance().getBase64();
        return this;
      }
      
      // repeated int32 byte_list = 12;
      public java.util.List<java.lang.Integer> getByteListList() {
        return java.util.Collections.unmodifiableList(result.byteList_);
      }
      public int getByteListCount() {
        return result.getByteListCount();
      }
      public int getByteList(int index) {
        return result.getByteList(index);
      }
      public Builder setByteList(int index, int value) {
        result.byteList_.set(index, value);
        return this;
      }
      public Builder addByteList(int value) {
        if (result.byteList_.isEmpty()) {
          result.byteList_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.byteList_.add(value);
        return this;
      }
      public Builder addAllByteList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.byteList_.isEmpty()) {
          result.byteList_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.byteList_);
        return this;
      }
      public Builder clearByteList() {
        result.byteList_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int32 i16_list = 13;
      public java.util.List<java.lang.Integer> getI16ListList() {
        return java.util.Collections.unmodifiableList(result.i16List_);
      }
      public int getI16ListCount() {
        return result.getI16ListCount();
      }
      public int getI16List(int index) {
        return result.getI16List(index);
      }
      public Builder setI16List(int index, int value) {
        result.i16List_.set(index, value);
        return this;
      }
      public Builder addI16List(int value) {
        if (result.i16List_.isEmpty()) {
          result.i16List_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.i16List_.add(value);
        return this;
      }
      public Builder addAllI16List(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.i16List_.isEmpty()) {
          result.i16List_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.i16List_);
        return this;
      }
      public Builder clearI16List() {
        result.i16List_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated int64 i64_list = 14;
      public java.util.List<java.lang.Long> getI64ListList() {
        return java.util.Collections.unmodifiableList(result.i64List_);
      }
      public int getI64ListCount() {
        return result.getI64ListCount();
      }
      public long getI64List(int index) {
        return result.getI64List(index);
      }
      public Builder setI64List(int index, long value) {
        result.i64List_.set(index, value);
        return this;
      }
      public Builder addI64List(long value) {
        if (result.i64List_.isEmpty()) {
          result.i64List_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.i64List_.add(value);
        return this;
      }
      public Builder addAllI64List(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.i64List_.isEmpty()) {
          result.i64List_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.i64List_);
        return this;
      }
      public Builder clearI64List() {
        result.i64List_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.twitter.elephantbird.examples.proto.OneOfEach)
    }
    
    static {
      defaultInstance = new OneOfEach(true);
      com.twitter.elephantbird.examples.proto.ThriftFixtures.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.twitter.elephantbird.examples.proto.OneOfEach)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_twitter_elephantbird_examples_proto_OneOfEach_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_twitter_elephantbird_examples_proto_OneOfEach_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025thrift_fixtures.proto\022\'com.twitter.ele" +
      "phantbird.examples.proto\"\231\002\n\tOneOfEach\022\017" +
      "\n\007im_true\030\001 \001(\010\022\020\n\010im_false\030\002 \001(\010\022\016\n\006a_b" +
      "ite\030\003 \001(\005\022\021\n\tinteger16\030\004 \001(\005\022\021\n\tinteger3" +
      "2\030\005 \001(\005\022\021\n\tinteger64\030\006 \001(\003\022\030\n\020double_pre" +
      "cision\030\007 \001(\001\022\027\n\017some_characters\030\010 \001(\t\022\024\n" +
      "\014zomg_unicode\030\t \001(\t\022\020\n\010what_who\030\n \001(\010\022\016\n" +
      "\006base64\030\013 \001(\014\022\021\n\tbyte_list\030\014 \003(\005\022\020\n\010i16_" +
      "list\030\r \003(\005\022\020\n\010i64_list\030\016 \003(\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_twitter_elephantbird_examples_proto_OneOfEach_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_twitter_elephantbird_examples_proto_OneOfEach_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_twitter_elephantbird_examples_proto_OneOfEach_descriptor,
              new java.lang.String[] { "ImTrue", "ImFalse", "ABite", "Integer16", "Integer32", "Integer64", "DoublePrecision", "SomeCharacters", "ZomgUnicode", "WhatWho", "Base64", "ByteList", "I16List", "I64List", },
              com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach.class,
              com.twitter.elephantbird.examples.proto.ThriftFixtures.OneOfEach.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
