<project name="elephant-bird-examples" default="package">
    
  <!-- Global properties for this build -->
  <property name="jar.name" value="elephant-bird-examples" />

  <!-- Directories -->
  <property name="build.dir" location="${basedir}/build"/>
  <property name="javadoc.dir" location="${build.dir}/javadoc"/>

  <property name="src.dir" location="${basedir}/src"/>
  <property name="src.java.dir" location="${src.dir}/java" />
  <property name="src.proto.dir" location="${src.dir}/proto" />
  <property name="src.thrift.dir" location="${src.dir}/thrift" />

  <property name="src.gen.java.dir" location="${build.dir}/gen-java"/>
  <property name="src.gen.piglet.dir" location="${build.dir}/gen-piglet"/>
  <property name="classes.dir" location="${build.dir}/classes" />

  <path id="compile.classpath">
    <fileset dir="${classes.dir}"/>
    <fileset dir="${lib.dir}"/>
    <pathelement location="${jar.file}"/>
  </path>

  <target name="init">
    <fail message="Please build examples from the elephant-bird root with 'ant examples'">
      <condition>
        <not>
          <!-- version is passed in from the top-level build file -->
          <isset property="version"/>
        </not>
      </condition>
    </fail>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${src.gen.java.dir}"/>
  </target>

  <target name="generate-thrift" depends="init">
    <apply executable="thrift" failonerror="true" skipemptyfilesets="true" verbose="true">
      <env key="PATH" path="${env.PATH}:."/>
      <arg value="--gen"/>
      <arg value="java"/>
      <arg value="-o"/>
      <!-- Thrift creates gen-java in the output directory. -->
      <arg value="${src.gen.java.dir}/.."/>
      <fileset dir="${src.thrift.dir}" includes="**/*.thrift"/>
    </apply>
  </target>

  <target name="generate-protobuf" depends="init">
    <mkdir dir="${src.gen.java.dir}" />
    <apply executable="protoc" failonerror="true" skipemptyfilesets="true" verbose="true">
      <env key="PATH" path="${env.PATH}:." />
      <env key="ELEPHANT_BIRD_VERSION" value="${version}"/>
      <arg value="--proto_path=${src.proto.dir}" />
      <arg value="--java_out=${src.gen.java.dir}" />
      <!-- The following line will invoke protoc_gen_twadoop, our protoc plugin -->
      <arg value="--twadoop_out=${src.gen.java.dir}" />
      <arg value="--proto_path=${src.proto.dir}" />
      <fileset dir="${src.proto.dir}" includes="**/*.proto" />
    </apply>
  </target>

  <target name="compile" depends="generate-thrift, generate-protobuf" description="compile the source">
    <_javac srcDir="${src.gen.java.dir}"
            destDir="${classes.dir}"
            classPathRef="compile.classpath"/>
    <_javac srcDir="${src.java.dir}"
            destDir="${classes.dir}"
            classPathRef="compile.classpath"/>
  </target>

  <target name="jar" depends="compile" description="generate the distribution">
    <jar jarfile="${build.dir}/${jar.name}-${version}.jar">
      <fileset dir="${classes.dir}"/>
    </jar>
  </target>

  <target name="generate-piglet" depends="jar">
    <mkdir dir="${src.gen.piglet.dir}" />
    <apply executable="protoc" failonerror="true" skipemptyfilesets="true" verbose="true">
      <env key="PATH" path="${env.PATH}:." />
      <env key="ELEPHANT_BIRD_VERSION" value="${version}"/>
      <arg value="--proto_path=${src.proto.dir}" />
      <!-- The following line will invoke protoc_gen_piglet, our protoc plugin -->
      <arg value="--piglet_out=${src.gen.piglet.dir}" />
      <fileset dir="${src.proto.dir}" includes="**/*.proto" />
      <globmapper from="*.proto" to="*.java" />
    </apply>
  </target>

  <target name="javadoc" depends="jar" description="generate documentation">
    <delete dir="${javadoc.dir}"/>
    <javadoc destdir="${javadoc.dir}" classpathref="compile.classpath">
      <fileset dir="${src.java.dir}"/>
      <fileset dir="${src.gen.java.dir}"/>
    </javadoc>
  </target>

  <target name="package" depends="init, generate-piglet, javadoc"/>

  <target name="clean" description="clean up">
    <delete dir="${build.dir}"/>
  </target>
</project>
